<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Theorems and Proofs on RSA Analysis</title>
    <link>https://prisha247.github.io/QuantumCryptography/proofs/</link>
    <description>Recent content in Theorems and Proofs on RSA Analysis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://prisha247.github.io/QuantumCryptography/proofs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://prisha247.github.io/QuantumCryptography/proofs/post/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://prisha247.github.io/QuantumCryptography/proofs/post/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Chinese Remainder Theorem</title>
      <link>https://prisha247.github.io/QuantumCryptography/proofs/crt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://prisha247.github.io/QuantumCryptography/proofs/crt/</guid>
      <description>The Chinese Remainder Theorem (CRT) can help solve systems of equations for modular arithmetic equations. For example, we will use CRT to solve the below problem:
$$ x \equiv 2\ (\bmod 3)$$ $$ x \equiv 1\ (\bmod 4)$$ $$ x \equiv 3\ (\bmod 5)$$
With CRT, we can solve this system of equations as if they were three independent equations. Consider the solution for x to be in the following form:</description>
    </item>
    
    <item>
      <title>Euler Totient Theorem</title>
      <link>https://prisha247.github.io/QuantumCryptography/proofs/post2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://prisha247.github.io/QuantumCryptography/proofs/post2/</guid>
      <description>Euler’s Totient Function (mentioned as the $φ$ function in the RSA Algorithm page) measures the &amp;ldquo;breakability of a number&amp;rdquo; by calculating the number of coprimes of the product of two prime numbers, and is therefore used in the RSA algorithm to generate encryption keys (e). The greater the $φ$ number, the more possibilities of unique encryption keys.
Suppose $p$ is a prime number. Let the $φ$ function will provide the number of values which are prime relative to the $p$.</description>
    </item>
    
    <item>
      <title>Fermat Little Theorem</title>
      <link>https://prisha247.github.io/QuantumCryptography/proofs/fermat-little/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://prisha247.github.io/QuantumCryptography/proofs/fermat-little/</guid>
      <description>Description Fermat&amp;rsquo;s Little Theorem, also known as Euler&amp;rsquo;s Little Theorem, is an equation that involves modular equations with exponentiation, similar to the exponentiation done in RSA. More specifically, the theorem is as follows:
$$a^p \equiv a\ (\bmod p)$$
More specifically, $a$ can be any integer, and $p$ can be any prime number.
Corollary Dividing both sides by $a$ produces this corollary. Both this form and the above form can come in handy when solving modular arithmetic equations.</description>
    </item>
    
  </channel>
</rss>
